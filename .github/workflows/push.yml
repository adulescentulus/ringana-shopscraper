name: push
on:
  push:

jobs:
  getNextVersion:
    name: Get next release version
    runs-on: ubuntu-latest
    outputs:
      nextversion: ${{ steps.getnextversion.outputs.nextversion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: run semantic-release to get next
        uses: docker://ghcr.io/adulescentulus/docker-semantic-release:latest
        with:
          args: semantic-release --generate-notes false --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: print next version
        id: getnextversion
        run: |
            test -e .VERSION && echo Determined next version: $(cat .VERSION) || ( echo No new version, do not create release && echo latest > .VERSION )
            echo "::set-output name=nextversion::$(cat .VERSION)"
      - uses: actions/upload-artifact@v2
        with:
          name: version
          path: .VERSION
  build:
    name: Build
    needs: getNextVersion
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore .VERSION
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Set nextVersion
        id: branch_name
        run: |
          if [ -e .VERSION ]
          then
            echo "NEXT_VERSION=$(cat .VERSION)" >> $GITHUB_ENV
          else
            echo "NEXT_VERSION=latest" >> $GITHUB_ENV
          fi
      - name: Echo NEXT_VERSION
        run: |
          echo $NEXT_VERSION
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          context: .
          file: Dockerfile.distroless
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/adulescentulus/ringana-shopscraper:${{ env.NEXT_VERSION }}
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  release:
    name: Create new release
    if: ${{ needs.getNextVersion.outputs.nextversion != 'latest' }}
    needs:
    - getNextVersion
    - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: run semantic-release to get next
        uses: docker://ghcr.io/adulescentulus/docker-semantic-release:latest
        with:
          args: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}